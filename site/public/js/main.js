function ready(fn){"loading"!=document.readyState?fn():document.addEventListener("DOMContentLoaded",fn)}async function request(url,method="GET",data=[],responseFormat="text",headers={}){"GET"===method&&data.length>0&&(url+="?"+new URLSearchParams(data).toString());let res=await fetch(url,{method:method,headers:{"Content-Type":"application/x-www-form-urlencoded",...headers},body:"GET"!==method?new URLSearchParams(data):void 0});return"json"===responseFormat?await res.json():await res.text()}Element.prototype.on=Element.prototype.addEventListener;const find=document.querySelector.bind(document),findAll=document.querySelectorAll.bind(document);async function TootPlayer(slug){const body=find("body"),tootsContainer=find(".toots");let toots=await request("/api/toots/"+slug,"GET",[],"json");toots&&(toots.forEach(((toot,index)=>{let tootHTML=`\n            <div class="toot" data-id="${toot.id}">\n                <div class="toot-header">\n                    <a href="${toot.account.url}" target="_blank" class="col col-image">\n                        <img src="/media/avatars/${toot.account.id}.jpg" alt="${toot.account.display_name}" loading="lazy">\n                    </a>\n                    <a href="${toot.account.url}" target="_blank" class="col col-name">\n                        <div class="display-name">${toot.account.display_name}</div>\n                        <div class="acct">${toot.account.acct}</div>\n                    </a>\n                    <div class="col col-created_at">\n                        date\n                    </div>\n                </div>\n                <div class="toot-body">\n                    ${toot.content}\n                </div>\n            </div>\n            `,tootElement=document.createElement("div");tootElement.innerHTML=tootHTML.trim(),tootElement=tootElement.firstChild,toots[index].el=tootElement,tootsContainer.append(tootElement)})),body.classList.add("toots-loaded"))}Element.prototype.find=Element.prototype.querySelector,Element.prototype.findAll=Element.prototype.querySelectorAll,Element.prototype.show=function(){this.style.display=this.dataset._display||"block"},Element.prototype.hide=function(){this.dataset._display=window.getComputedStyle(this,null).display,this.style.display="none"},ready((()=>{if(find(".page-movie")){const movieInfo=find(".movie .info"),openMovieInfo=find(".movie-info"),closeMovieInfo=movieInfo.find(".close");openMovieInfo.on("click",(e=>{e.preventDefault(),movieInfo.show(),openMovieInfo.hide()})),closeMovieInfo.on("click",(e=>{e.preventDefault(),movieInfo.hide(),openMovieInfo.show()}))}}));